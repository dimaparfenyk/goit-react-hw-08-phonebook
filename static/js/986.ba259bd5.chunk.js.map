{"version":3,"file":"static/js/986.ba259bd5.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/App.styled.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/contactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n    margin: 0 auto;\n    padding: 0 10px 80px;\n    width: 320px;\n`\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 700;\n  padding: 10px;\n`;\n\nexport const FormInput = styled.input`\n    font-size: 16px;\n    height: 36px;\n    outline: none;\n    padding: 0 12px;\n    border: 1px solid orange;\n    border-radius:8px;\n    color: teal;\n\n  :focus {\n    border-color: rgb(111, 111, 207);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #457aab;\n  border: none;\n  border-radius:8px;\n  text-transform: uppercase;\n  color: white;\n  cursor: pointer;\n  height: 40px;\n  width: 200px;\n  transition: background-color, color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: #000cb6b7;\n    color: #000;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0 15px;\n   \n`\nexport const Box = styled.div`\n   display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    `","const getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getIsLoading = state => state.contacts.isLoading;\nconst getError = state => state.contacts.error;\n\nexport const contactsSelectors = {\n  getContacts,\n  getFilter,\n  getIsLoading,\n  getError,\n};\n","import { useState } from 'react';\nimport { Label, Title, FormInput, Button, Container } from './ContactForm.styled';\nimport { Report } from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactOperations';\nimport { contactsSelectors } from 'redux/contacts/contactsSelectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const onChangeName = e => setName(e.currentTarget.value);\n  const onChangeNumber = e => setNumber(e.currentTarget.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = { name, number };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Report.warning(\n        `Контакт с именем ${name} уже существует`\n      );\n      return;\n    }\n\n    dispatch(addContact(newContact));\n\n    setName('');\n    setNumber('');\n  };\n\n \n  return (\n    <form onSubmit={handleSubmit}>\n      <Container>\n      <Label>\n        <Title>Name</Title>\n        <FormInput\n          onChange={onChangeName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        <Title>Number</Title>\n        <FormInput\n          onChange={onChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Container>\n    </form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\nlist-style: none;\nmargin: 0, auto;\npadding: 0;\n`\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\ndisplay: flex;\nalign-items: center;\nmargin-bottom: 15px;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #457aab;\n  border: none;\n  border-radius:8px;\n  text-transform: uppercase;\n  color: white;\n  cursor: pointer;\n  height: 40px;\n  width: 80px;\n  transition: background-color, color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: #000cb6b7;\n    color: #000;\n  }\n`;\n\nexport const Text = styled.p`\nfont-weight: 500;\nmargin-right:15px;\n`\nexport const SubText = styled.span`\ncolor:orange;\n\nmargin-right:15px;\nfont-weight: 500;\n`\n\n \n","import PropTypes from 'prop-types';\nimport { ListItem, Button,SubText, Text } from './ContactItem.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactOperations';\n\nexport const ContactListItem = ({ name, number, id}) => { \n    const dispatch = useDispatch();\n   \n    return(<ListItem >\n                <SubText>{name}:</SubText>\n                <Text>{number}</Text>\n        <Button\n            type='button'\n            onClick={() => dispatch(deleteContact(id))}>Удалить\n        </Button>  \n            </ListItem>)\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { List } from './ContactList.styled';\nimport { ContactListItem } from 'components/ContactItem/ContactItem';\nimport { contactsSelectors } from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactOperations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContactsList = filteredContacts();\n\n  return (\n    contacts && (\n      < List >\n                {filteredContactsList.map(({ id, name, number }) => {\n                    return (<ContactListItem\n                        key={id}\n                        id={id}\n                        name={name}\n                        number={number}\n                    />)\n                })}\n            </List>\n        ));\n};\n","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n    border-radius:8px;\n    border: 1px solid orange;\n    color: black;\n    font-size: 14px;\n    height: 40px;\n    outline: none;\n    padding: 0 10px;\n    min-width: 300px;\n    :focus {\n    border-color: rgb(111, 111, 207);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\n","import { useDispatch } from 'react-redux';\nimport { contactsSlice } from 'redux/contacts/contactsSlice';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e =>\n    dispatch(contactsSlice.actions.filteredContact(e.currentTarget.value));\n\n  return (<Label>Find contacts by name\n        <Input\n            type=\"text\"\n            name='filter'\n            onChange={handleChangeFilter}\n        />\n    </Label>);\n};\n","import { Container, Box  } from 'components/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <Container>\n        <h2>Phonebook</h2>\n        <ContactForm />\n      <h3>Contacts</h3>\n        <Box>\n        <Filter />\n          <ContactList />\n          </Box>\n      </Container>\n    </>\n  );\n}\n"],"names":["Container","styled","Label","Title","FormInput","Button","Box","contactsSelectors","state","contacts","items","filter","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","newContact","some","contact","toLowerCase","Report","addContact","onChange","currentTarget","value","type","pattern","title","required","List","ListItem","Text","SubText","ContactListItem","id","onClick","deleteContact","ContactList","useEffect","fetchContacts","filteredContactsList","normalizedFilter","includes","filteredContacts","map","Input","Filter","contactsSlice","ContactsPage"],"sourceRoot":""}